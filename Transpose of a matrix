https://leetcode.com/problems/transpose-matrix/

Given a 2D integer array matrix, return the transpose of matrix.

The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.

Example 1:

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[1,4,7],[2,5,8],[3,6,9]]
Example 2:

Input: matrix = [[1,2,3],[4,5,6]]
Output: [[1,4],[2,5],[3,6]]
 

Constraints:

m == matrix.length
n == matrix[i].length
1 <= m, n <= 1000
1 <= m * n <= 105
-109 <= matrix[i][j] <= 109


solution:
---------


Runtime 26ms
------------
class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& matrix) {
        //writing seperate condition when n==m
        int r = matrix.size(); //row size
        int c = matrix[0].size(); //col size
        int temp;
        
        if(r == c)
        {
            for(int i=0;i<r;i++)
            {
                for(int j=0;j<i;j++)
                {
                    //matrix[j][i]=matrix[i][j];
                    //swap(matrix[j][i],matrix[i][j]);
                    temp=matrix[i][j];
                    matrix[i][j]=matrix[j][i];
                    matrix[j][i]=temp;
                }
            }
            return matrix;
        }
        
        vector<vector<int>> res;
        for(int i=0;i<c;i++)
        {
            vector<int> temp;
            for(int j=0;j<r;j++)
            {
                temp.push_back(matrix[j][i]);
            }
            res.push_back(temp);
        }
        return res;
    }
};


Another appoach: Runtime 12ms
-----------------------------

class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& matrix) {
        
        vector<vector<int>> res(matrix[0].size(), vector<int> (matrix.size()));
        for(int i=0;i<matrix.size();i++)
        {
            for(int j=0;j<matrix[0].size();j++)
            {
                //matrix[j][i]=matrix[i][j];//doesn't match if rows and columns not equal
                res[j][i]=matrix[i][j];
            }
        }
        return res;
    }
};
